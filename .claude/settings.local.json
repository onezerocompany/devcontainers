{
  "permissions": {
    "allow": [
      "Bash(--cap-add NET_ADMIN )",
      "Bash(-e DEVCONTAINER_SANDBOX_ENABLED=true )",
      "Bash(-e DEVCONTAINER_SANDBOX_FIREWALL=false )",
      "Bash(-e DEVCONTAINER=true )",
      "Bash(./build-local.sh:*)",
      "Bash(./test-local.sh:*)",
      "Bash(./test.sh)",
      "Bash(bash:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(docker build:*)",
      "Bash(docker compose:*)",
      "Bash(docker inspect:*)",
      "Bash(docker pull:*)",
      "Bash(docker rmi:*)",
      "Bash(docker run:*)",
      "Bash(find:*)",
      "Bash(gh api:*)",
      "Bash(gh run cancel:*)",
      "Bash(gh run list:*)",
      "Bash(gh run rerun:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh workflow:*)",
      "Bash(ghcr.io/onezerocompany/devcontainer:base )",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(true)",
      "mcp__github__get_job_logs",
      "mcp__github__get_me",
      "mcp__github__get_workflow_run",
      "mcp__github__list_workflow_jobs",
      "mcp__github__list_workflow_runs",
      "mcp__github__list_workflows",
      "mcp__github__search_repositories",
      "mcp__ide__getDiagnostics",
      "WebFetch(domain:github.com)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(./test-sandbox.sh:*)",
      "Bash(./iterate-sandbox.sh:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(./build-all.sh)",
      "Bash(--build-arg BASE_IMAGE_TAG=s6-fixed )",
      "Bash(--build-arg BASE_IMAGE_REGISTRY=docker.io )",
      "Bash(--build-arg BASE_IMAGE_NAME=base )",
      "Bash(git ls-tree:*)",
      "Bash(devcontainer features test:*)",
      "Bash(ln:*)",
      "Bash(git reset:*)",
      "mcp__github__search_code",
      "mcp__github__get_file_contents",
      "Bash(tree:*)",
      "Bash(git log:*)",
      "mcp__github__get_pull_request",
      "mcp__github__search_pull_requests",
      "Bash(git pull:*)",
      "mcp__github__list_tags",
      "mcp__github__get_tag",
      "WebFetch(domain:starship.rs)",
      "WebFetch(domain:containers.dev)",
      "Bash(cat:*)",
      "Bash(docker-compose config:*)",
      "Bash(/Users/luca/Projects/devcontainers/test_markers.sh:*)",
      "Bash(gh pr view:*)",
      "mcp__github__create_pull_request",
      "Bash(git rebase:*)",
      "Bash(gh release create:*)",
      "Bash(devcontainer build:*)",
      "Bash(devcontainer:*)",
      "Bash(gh repo view:*)",
      "Bash(find /Users/luca/Projects/devcontainers/features/src/common-utils -name \"*.sh\" -exec grep -l \"add_config\" {} ;)",
      "Bash(/Users/luca/Projects/devcontainers/test_generate_config.sh:*)",
      "Bash(/Users/luca/Projects/devcontainers/test_bundle_logic.sh:*)",
      "Bash(./test.sh:*)",
      "Bash(./minimal.sh:*)",
      "Bash(./test_bundle_logic.sh:*)",
      "Bash(./debug_minimal.sh:*)",
      "Bash(./fix_return_statements.sh:*)",
      "Bash(for dir in */)",
      "Bash(do mv \"$dir\"*.sh .)",
      "Bash(done)",
      "Bash(./update_scripts.sh)",
      "Bash(sed:*)",
      "Bash(for:*)",
      "Bash(do sed -i.bak 's/\\${\\\\\\1:-true}/\\${TOOL:-true}/g' \"$file\")",
      "Bash(perl:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(docker exec:*)",
      "Bash(./manual-test.sh:*)",
      "Bash(git remote get-url:*)",
      "mcp__github__get_pull_request_status",
      "Bash(claude mcp:*)",
      "Bash(mise run lint:*)",
      "Bash(mise run shellcheck:*)",
      "Bash(mise run:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__github__list_commits"
    ],
    "deny": []
  }
}