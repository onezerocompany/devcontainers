name: Build and Publish

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 3 * * *" # Daily at 3am
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  BASE_IMAGE_NAME: ${{ github.repository_owner }}/base
  DEVCONTAINER_IMAGE_NAME: ${{ github.repository_owner }}/devcontainer
  RUNNER_IMAGE_NAME: ${{ github.repository_owner }}/runner
  SETTINGS_GEN_IMAGE_NAME: ${{ github.repository_owner }}/settings-gen

jobs:
  # Build the base image
  build-base:
    name: Build Base Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: ./images/base
          file: ./images/base/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-base
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-base,mode=max
          target: standard

  # Build the dind image
  build-dind:
    name: Build Docker-in-Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push dind image
        uses: docker/build-push-action@v5
        with:
          context: ./images/base
          file: ./images/base/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:dind
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-dind
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-dind,mode=max
          target: dind

  # Build the devcontainer standard image
  build-devcontainer-standard:
    name: Build DevContainer Standard Image
    needs: build-base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push devcontainer standard image
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer
          file: ./images/devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:base
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-standard
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-standard,mode=max
          build-args: |
            BASE_IMAGE_REGISTRY=${{ env.REGISTRY }}
            BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
            BASE_IMAGE_TAG=latest
            DIND=false

  # Build the devcontainer dind image
  build-devcontainer-dind:
    name: Build DevContainer DIND Image
    needs: build-dind
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push devcontainer dind image
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer
          file: ./images/devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:dind
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-dind
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-dind,mode=max
          build-args: |
            BASE_IMAGE_REGISTRY=${{ env.REGISTRY }}
            BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
            BASE_IMAGE_TAG=dind
            DIND=true

  # Build the runner image
  build-runner:
    name: Build Runner Image
    needs: [build-base]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push runner image
        uses: docker/build-push-action@v5
        with:
          context: ./images/runner
          file: ./images/runner/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:buildcache-runner
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:buildcache-runner,mode=max
          
  # Build the settings generator image
  build-settings-gen:
    name: Build Settings Generator Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push settings generator image
        uses: docker/build-push-action@v5
        with:
          context: ./images/settings-gen
          file: ./images/settings-gen/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.SETTINGS_GEN_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.SETTINGS_GEN_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.SETTINGS_GEN_IMAGE_NAME }}:buildcache-settings-gen
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.SETTINGS_GEN_IMAGE_NAME }}:buildcache-settings-gen,mode=max

  # Test base image
  test-base:
    name: Test Base Image
    needs: build-base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/base
          file: ./images/base/Dockerfile
          load: true
          tags: test-base:latest
          target: standard
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-base

      - name: Run base image tests
        run: |
          docker run --rm -v ${{ github.workspace }}/images/base/tests:/tests test-base:latest bash /tests/test.sh

  # Test base dind image
  test-base-dind:
    name: Test Base DIND Image
    needs: build-dind
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base dind image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/base
          file: ./images/base/Dockerfile
          load: true
          tags: test-base-dind:latest
          target: dind
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:buildcache-dind

      - name: Run base dind image tests
        run: |
          docker run --rm --privileged -v ${{ github.workspace }}/images/base/tests:/tests test-base-dind:latest bash /tests/test.sh

  # Test devcontainer standard image
  test-devcontainer-standard:
    name: Test DevContainer Standard Image
    needs: build-devcontainer-standard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build devcontainer standard image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer
          file: ./images/devcontainer/Dockerfile
          load: true
          tags: test-devcontainer:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-standard
          build-args: |
            BASE_IMAGE_REGISTRY=${{ env.REGISTRY }}
            BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
            BASE_IMAGE_TAG=latest
            DIND=false

      - name: Run devcontainer standard image tests
        run: |
          docker run --rm -v ${{ github.workspace }}/images/devcontainer/tests:/tests test-devcontainer:latest bash /tests/test.sh

  # Test devcontainer dind image
  test-devcontainer-dind:
    name: Test DevContainer DIND Image
    needs: build-devcontainer-dind
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build devcontainer dind image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer
          file: ./images/devcontainer/Dockerfile
          load: true
          tags: test-devcontainer-dind:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.DEVCONTAINER_IMAGE_NAME }}:buildcache-devcontainer-dind
          build-args: |
            BASE_IMAGE_REGISTRY=${{ env.REGISTRY }}
            BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
            BASE_IMAGE_TAG=dind
            DIND=true

      - name: Run devcontainer dind image tests
        run: |
          docker run --rm --privileged -v ${{ github.workspace }}/images/devcontainer/tests:/tests test-devcontainer-dind:latest bash /tests/test.sh

  # Test runner image
  test-runner:
    name: Test Runner Image
    needs: build-runner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build runner image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/runner
          file: ./images/runner/Dockerfile
          load: true
          tags: test-runner:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:buildcache-runner

      - name: Run runner image tests
        run: |
          docker run --rm -v ${{ github.workspace }}/images/runner/tests:/tests test-runner:latest bash /tests/test.sh

  # Test settings-gen image
  test-settings-gen:
    name: Test Settings Generator Image
    needs: build-settings-gen
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build settings-gen image for testing
        uses: docker/build-push-action@v5
        with:
          context: ./images/settings-gen
          file: ./images/settings-gen/Dockerfile
          load: true
          tags: test-settings-gen:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.SETTINGS_GEN_IMAGE_NAME }}:buildcache-settings-gen

      - name: Run settings-gen image tests
        run: |
          docker run --rm -v ${{ github.workspace }}/images/settings-gen/tests:/tests test-settings-gen:latest sh /tests/test.sh