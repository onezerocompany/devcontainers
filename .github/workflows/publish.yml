name: Build and Publish Images & Features

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *" # Run every day at 3am
  push:
    branches:
      - main

jobs:
  base:
    name: Build and Publish Base Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./images/base
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/base:buildcache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/base:buildcache
          tags: ghcr.io/${{ github.repository_owner }}/base:latest
          push: true

  dind:
    name: Build and Publish Docker-in-Docker Image
    runs-on: ubuntu-latest
    needs: [base]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./images/dind
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/dind:buildcache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/dind:buildcache
          tags: ghcr.io/${{ github.repository_owner }}/dind:latest
          push: true

  devcontainer_base:
    name: Build and Publish Devcontainer Base Image
    runs-on: ubuntu-latest
    needs: [base]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer-base
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/devcontainer-base:buildcache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/devcontainer-base:buildcache
          tags: ghcr.io/${{ github.repository_owner }}/devcontainer-base:latest
          push: true

  devcontainer_dind:
    name: Build and Publish Devcontainer DIND Image
    runs-on: ubuntu-latest
    needs: [dind]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./images/devcontainer-dind
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/devcontainer-dind:buildcache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/devcontainer-dind:buildcache
          tags: ghcr.io/${{ github.repository_owner }}/devcontainer-dind:latest
          push: true

  runner:
    name: Build and Publish Runner Image
    runs-on: ubuntu-latest
    needs: [base]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./images/runner
          platforms: linux/amd64,linux/arm64
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/runner:buildcache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/runner:buildcache
          tags: ghcr.io/${{ github.repository_owner }}/runner:latest
          push: true

  features:
    name: Build and Publish Features
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Publish Features"
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./features/src"
          disable-repo-tagging: "true"
          features-namespace: "onezerocompany/devcontainers/features"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  templates:
    name: Build and Publish Templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Publish Templates"
        uses: devcontainers/action@v1
        with:
          publish-templates: "true"
          base-path-to-templates: "./devcontainers"
          disable-repo-tagging: "true"
          templates-namespace: "onezerocompany/devcontainers"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
